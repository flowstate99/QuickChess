{"ast":null,"code":"var _jsxFileName = \"/home/achraf/learning/QuickChess/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Chessboard from './components/chessboard/Chessboard';\nimport Header from './components/header/header';\nimport Login from './components/login/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [darkMode, setDarkMode] = useState(true);\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  const handleLogin = async credentials => {\n    try {\n      const response = await fetch('http://localhost:8000/api/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setIsLoggedIn(true);\n        // Store user data or token as needed\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('An error occurred during login');\n    }\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      darkMode: darkMode,\n      toggleDarkMode: toggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xkfsctgbr62MWQvaaQ/OzOWjhts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Header","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","darkMode","setDarkMode","document","body","classList","add","remove","handleLogin","credentials","response","fetch","method","headers","JSON","stringify","ok","userData","json","alert","error","console","toggleDarkMode","prevMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/achraf/learning/QuickChess/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Chessboard from './components/chessboard/Chessboard';\nimport Header from './components/header/header';\nimport Login from './components/login/login';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [darkMode, setDarkMode] = useState(true);\n\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(credentials),\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setIsLoggedIn(true);\n        // Store user data or token as needed\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('An error occurred during login');\n    }\n  };  \n\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\n      {isLoggedIn ? <div className='content-wrapper'><Chessboard /></div>\n        : <Login onLogin={handleLogin} darkMode={darkMode} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,EAAE;MACZE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMO,WAAW,GAAG,MAAOC,WAAW,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDT,IAAI,EAAEU,IAAI,CAACC,SAAS,CAACN,WAAW;MAClC,CAAC,CAAC;MACF,IAAIC,QAAQ,CAACM,EAAE,EAAE;QACf,MAAMC,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACtClB,aAAa,CAAC,IAAI,CAAC;QACnB;MACF,CAAC,MAAM;QACLmB,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCD,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3BpB,WAAW,CAACqB,QAAQ,IAAI,CAACA,QAAQ,CAAC;EACpC,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA,CAACH,MAAM;MAACQ,QAAQ,EAAEA,QAAS;MAACqB,cAAc,EAAEA;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7D9B,UAAU,gBAAGH,OAAA;MAAK4B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAAC7B,OAAA,CAACJ,UAAU;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAC/DjC,OAAA,CAACF,KAAK;MAACoC,OAAO,EAAEtB,WAAY;MAACP,QAAQ,EAAEA;IAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAAC/B,EAAA,CA7CQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}