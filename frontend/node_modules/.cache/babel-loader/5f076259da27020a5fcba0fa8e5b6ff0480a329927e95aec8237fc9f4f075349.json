{"ast":null,"code":"var _jsxFileName = \"/home/achraf/learning/QuickChess/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Chessboard from './components/chessboard/Chessboard';\nimport Header from './components/header/header';\nimport Login from './components/login/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [darkMode, setDarkMode] = useState(true);\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  const handleLogin = credentials => {\n    console.log('credentials:', credentials);\n    if (credentials.username === 'admin' && credentials.password === 'admin') {\n      setIsLoggedIn(true);\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      darkMode: darkMode,\n      setDarkMode: toggleDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 77\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xkfsctgbr62MWQvaaQ/OzOWjhts=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Header","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","darkMode","setDarkMode","document","body","classList","add","remove","handleLogin","credentials","console","log","username","password","alert","toggleDarkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/achraf/learning/QuickChess/frontend/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Chessboard from './components/chessboard/Chessboard';\nimport Header from './components/header/header';\nimport Login from './components/login/login';\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [darkMode, setDarkMode] = useState(true);\n\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  const handleLogin = (credentials) => {\n    console.log('credentials:', credentials);\n    if (credentials.username === 'admin' && credentials.password === 'admin') {\n      setIsLoggedIn(true);\n    } else {\n      alert('Invalid credentials');\n    }\n  }\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  }\n  return (\n    <div className=\"App\">\n      <Header darkMode={darkMode} setDarkMode={toggleDarkMode} />\n      {isLoggedIn ? <div className='content-wrapper'><Chessboard /></div> : <Login onLogin={handleLogin} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,EAAE;MACZE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;EACF,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMO,WAAW,GAAIC,WAAW,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,WAAW,CAAC;IACxC,IAAIA,WAAW,CAACG,QAAQ,KAAK,OAAO,IAAIH,WAAW,CAACI,QAAQ,KAAK,OAAO,EAAE;MACxEb,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLc,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EACD,oBACEL,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA,CAACH,MAAM;MAACQ,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEa;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC1DtB,UAAU,gBAAGH,OAAA;MAAKoB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAACrB,OAAA,CAACJ,UAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAAGzB,OAAA,CAACF,KAAK;MAAC4B,OAAO,EAAEd;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClG,CAAC;AAEV;AAACvB,EAAA,CA/BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}