{"ast":null,"code":"var _jsxFileName = \"/home/achraf/learning/QuickChess/frontend/src/components/login/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin,\n  darkMode\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onLogin(data);\n      } else {\n        if (data.error === 'User does not exist') {\n          alert('User does not exist. Please register.');\n        } else {\n          alert(data.error || 'An error occurred');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onLogin(data);\n      } else {\n        if (data.error === 'User already exists') {\n          alert('User already exists. Please login.');\n        } else {\n          alert(data.error || 'An error occurred');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-container ${darkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-title\",\n      children: isRegistering ? 'Register' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","darkMode","_s","username","setUsername","password","setPassword","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","alert","console","handleRegister","className","children","isRegistering","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/achraf/learning/QuickChess/frontend/src/components/login/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './login.css';\n\nfunction Login({ onLogin, darkMode }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok) {\n        onLogin(data);\n      } else {\n        if (data.error === 'User does not exist') {\n          alert('User does not exist. Please register.');\n        } else {\n          alert(data.error || 'An error occurred');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:8000/api/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      \n      const data = await response.json();\n      \n      if (response.ok) {\n        onLogin(data);\n      } else {\n        if (data.error === 'User already exists') {\n          alert('User already exists. Please login.');\n        } else {\n          alert(data.error || 'An error occurred');\n        }\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <div className={`login-container ${darkMode ? 'dark' : 'light'}`}>\n      <h1 className=\"login-title\">{isRegistering ? 'Register' : 'Login'}</h1>\n      <form className=\"login-form\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          className=\"login-input\"\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"login-input\"\n        />\n        <button type=\"submit\" className=\"login-button\">\n          Login\n        </button>\n        <button type='submit' className='login-button'>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}